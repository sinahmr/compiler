$Program ~ #init $DeclarationList EOF
$DeclarationList ~ $DeclarationList $Declaration
$DeclarationList ~ $Declaration
$Declaration ~ $VarDeclaration
$Declaration ~ $FunDeclaration
$VarDeclaration ~ int ID #def_var ;
$VarDeclaration ~ int ID [ #def_arr #set_pointer NUM #arr_size ] ;
$FunDeclaration ~ int ID ( #def_func #start_scope $Params ) #init_func $CompoundStmt #end_scope
$FunDeclaration ~ void ID #def_func #start_scope ( $Params ) #init_func $CompoundStmt #end_scope
$Params ~ $ParamList
$Params ~ void
$ParamList ~ $ParamList , $Param #func_add_param
$ParamList ~ $Param #func_add_param
$Param ~ int ID #def_var 
$Param ~ int ID [ #def_arr ]
$CompoundStmt ~ { #start_scope $LocalDeclarations $StatementList #end_scope }
$LocalDeclarations ~ $LocalDeclarations $VarDeclaration
$LocalDeclarations ~ ε
$StatementList ~ $StatementList $Statement
$StatementList ~ ε
$Statement ~ $ExpressionStmt
$Statement ~ $CompoundStmt
$Statement ~ $SelectionStmt
$Statement ~ $IterationStmt
$Statement ~ $ReturnStmt
$Statement ~ output ( $Expression #output ) ;
$ExpressionStmt ~ $Var = $Expression #assign ;
$ExpressionStmt ~ ;
$SelectionStmt ~ if ( $GenExpression ) #save $Statement #jpf
$SelectionStmt ~ if ( $GenExpression ) #save $Statement else #jpf_save $Statement #jp
$IterationStmt ~ while #label ( $GenExpression ) #save $Statement #while
$ReturnStmt ~ return #end_func ;
$ReturnStmt ~ return $GenExpression #set_ret_value #end_func ;
$Var ~ ID #pid
$Var ~ ID #pid #push_arr_size [ $Expression ] #arr_value
$GenExpression ~ $RelExpression
$GenExpression ~ $Expression
$RelExpression ~ $RelExpression && $RelTerm #and
$RelExpression ~ $RelTerm
$RelTerm ~ $Expression == $Expression #equal
$RelTerm ~ $Expression < $Expression #larger
$Expression ~ $Expression $AddOp $Term #add
$Expression ~ $Term
$AddOp ~ + #plus
$AddOp ~ - #minus
$Term ~ $Term $MulOp $Factor #mult
$Term ~ $Factor
$MulOp ~ * #times
$MulOp ~ / #divide
$Factor ~ ( $Expression )
$Factor ~ $Var
$Factor ~ $Call
$Factor ~ NUM #num_value
$Call ~ ID #pid #init_copy ( $Args ) #call
$Args ~ $ArgList
$Args ~ ε
$ArgList ~ $ArgList , $Expression #copy_input
$ArgList ~ $Expression #copy_input